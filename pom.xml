<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>it.unifi</groupId>
	<artifactId>project-planner</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>project-planner</name>
	<description>A web app for project planning</description>
	
	<properties>
		<java.version>1.8</java.version>
		
		<skip.unit-test>false</skip.unit-test>
		
		<jacoco.version>0.8.6</jacoco.version>
		<pitest.version>1.6.3</pitest.version>
		<coveralls.version>4.3.0</coveralls.version>
		<sonar-cloud.version>3.7.0.1746</sonar-cloud.version>
		
		<sonar.projectKey>caterinoa_project-planner</sonar.projectKey>
		<sonar.organization>caterinoa</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.reporting.outputDirectory}/jacoco/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports
		</sonar.junit.reportPaths>
    	<sonar.sources>
    		pom.xml,
    		${project.build.sourceDirectory},
    		${basedir}/src/main/resources
   		</sonar.sources>
   		<sonar.test>
   			${project.build.testSourceDirectory},
   			${basedir}/src/it/java,
   			${basedir}/src/e2e/java
   		</sonar.test>
   		<sonar.coverage.exclusions>
   			**/*Application.*,
   			**/model/*
   			**/repositories/* <!-- Only for service branch testing -->
 		</sonar.coverage.exclusions>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
								<source>src/bdd/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit-tests}</skipTests>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>	
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-cloud.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<excludes>
							<exclude>**/*Application.*</exclude>
							<exclude>**/model/*</exclude>
							<exclude>**/repositories/*</exclude> <!-- Only for service branch testing -->
						</excludes>	
						<rules>
							<rule>
								<element>PACKAGE</element>
								<limits>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>1.00</minimum>
									</limit>
								</limits>
							</rule>
						</rules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest.version}</version>
					<configuration>
						<targetClasses>
							<param>projectplanner.*</param>
						</targetClasses>
						<targetTests>
							<param>projectplanner.*</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
			
	</build>
	
	<profiles>
	
		<profile>
			<id>jacoco</id>
			<activation>
				<property>
					<name>skipCoverage</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<propertyName>surefireArgLine</propertyName>
								</configuration>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution> 
							<execution>
								<id>jacoco-report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${surefireArgLine}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>pitest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	
	</profiles>

</project>